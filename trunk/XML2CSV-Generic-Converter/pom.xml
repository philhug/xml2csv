<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>utils.xml.xml2csv</groupId>
	<artifactId>XML2CSVGenericConverter</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>XML2CSV-Generic-Converter</name>
	<description>Flatten XML into CSV to suit your mood</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.doc.directory>${basedir}\doc</project.doc.directory>
		<project.build.doc.directory>${project.build.outputDirectory}\doc</project.build.doc.directory>
		<project.build.tempDirectory>${project.build.directory}\temp</project.build.tempDirectory>
		<maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
	</properties>

	<!-- Deployment of this shared project is performed on the shared repository. -->
	<distributionManagement>
		<repository>
			<id>ftp-repository-maven-deploy-shared-all</id>
			<url>ftp://localhost</url>
			<!-- <uniqueVersion>false</uniqueVersion> -->
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>JavaNet</id>
			<name>JavaNet</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Artifact dependencies with compile scope (the default scope). -->
		<dependency>
			<groupId>gnu.getopt</groupId>
			<artifactId>java-getopt</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<!-- Artifact dependencies with test scope. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<!-- Enables FTP within Maven. Activates Wagon-FTP transport for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-beta-6</version>
			</extension>
		</extensions>
		<resources>
			<!-- Useful to have all property files packaged at the root of the java 
				project directory, if any, included in the root directory in generated jar 
				packages. -->
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<!-- Useful to have all property files packaged in the resources project 
				directory, if any, included in the root directory in generated jar packages. -->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<!-- Useful to have all documentation files packaged in the doc project 
				directory, if any, included in a doc directory in generated jar packages. -->
			<resource>
				<directory>${project.doc.directory}</directory>
				<includes>
					<include>**/*.zip</include>
					<include>**/*.csv</include>
					<include>**/*.xml</include>
					<include>**/*.txt</include>
					<include>**/*.odt</include>
					<include>**/*.pdf</include>
				</includes>
				<targetPath>${project.build.doc.directory}</targetPath>
			</resource>
		</resources>
		<plugins>
			<!-- Maven assembly plugin activation. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- Makes sure the right class is used as main executable class by Maven 
					jar plugin. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>utils.xml.xml2csv.XML2CSVConsoleCommand</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- Maven assembly plugin configuration upon activation. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-5</version>
					<executions>
						<!-- One plugin execution to generate an auto executable jar. -->
						<execution>
							<id>create-executable-jar</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<!-- <finalName>${maven.build.timestamp}-${project.artifactId}-V${project.version}</finalName> -->
								<finalName>${project.artifactId}_V${project.version}</finalName>
								<descriptorRefs>
									<descriptorRef>jar-with-dependencies</descriptorRef>
								</descriptorRefs>
								<archive>
									<manifest>
										<mainClass>utils.xml.xml2csv.XML2CSVConsoleCommand</mainClass>
									</manifest>
								</archive>
							</configuration>
						</execution>
						<!-- One plugin execution to generate a jar with all the sources. -->
						<!-- A custom descriptor file custom-src-descriptor.xml is used instead 
							of the regular built in reference "src" descriptor because the latter generates 
							3 files (zip, tar.gz and tar.bz2) and we only need a zip. -->
						<execution>
							<id>create-source-jar</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<finalName>${project.artifactId}_V${project.version}-src</finalName>
								<!-- <descriptorRefs> <descriptorRef>src</descriptorRef> </descriptorRefs> -->
								<descriptors>
									<descriptor>src/main/assembly/custom-src-descriptor.xml</descriptor>
								</descriptors>
							</configuration>
						</execution>
					</executions>
					<!-- Factorized configuration between the assembly plugin executions. -->
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<attach>false</attach>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>